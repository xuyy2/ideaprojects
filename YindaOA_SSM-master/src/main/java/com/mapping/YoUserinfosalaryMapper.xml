<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.YoUserinfosalaryMapper" >
  <resultMap id="BaseResultMap" type="com.model.YoUserinfosalary" >
    <id column="sid" property="sid" jdbcType="INTEGER" />
    <result column="salarydate" property="salarydate" jdbcType="VARCHAR" />
    <result column="salaryid" property="salaryid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="contract_type" property="contractType" jdbcType="VARCHAR" />
    <result column="ordinary_address" property="ordinaryAddress" jdbcType="VARCHAR" />
    <result column="branch_company" property="branchCompany" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="whether_bt_allowance" property="whetherBtAllowance" jdbcType="VARCHAR" />
    <result column="base_salary" property="baseSalary" jdbcType="DOUBLE" />
    <result column="yinda_identify" property="yindaIdentify" jdbcType="VARCHAR" />
    <result column="datetype" property="datetype" jdbcType="VARCHAR" />
    <result column="effectiveAttendance" property="effectiveattendance" jdbcType="VARCHAR" />
    <result column="realityattendance" property="realityattendance" jdbcType="VARCHAR" />
    <result column="attendancesalary" property="attendancesalary" jdbcType="DOUBLE" />
    <result column="leavetype" property="leavetype" jdbcType="VARCHAR" />
    <result column="leavesalary" property="leavesalary" jdbcType="DOUBLE" />
    <result column="workovertime" property="workovertime" jdbcType="VARCHAR" />
    <result column="worksalary" property="worksalary" jdbcType="DOUBLE" />
    <result column="subtotal" property="subtotal" jdbcType="DOUBLE" />
    <result column="evection" property="evection" jdbcType="VARCHAR" />
    <result column="allowance" property="allowance" jdbcType="DOUBLE" />
    <result column="heating_allowance" property="heatingAllowance" jdbcType="DOUBLE" />
    <result column="trafficsalary" property="trafficsalary" jdbcType="DOUBLE" />
    <result column="timesalary" property="timesalary" jdbcType="DOUBLE" />
    <result column="timebaseAdd" property="timebaseadd" jdbcType="DOUBLE" />
    <result column="task" property="task" jdbcType="VARCHAR" />
    <result column="tasksalary" property="tasksalary" jdbcType="DOUBLE" />
    <result column="taskbaseAdd" property="taskbaseadd" jdbcType="DOUBLE" />
    <result column="userbonus" property="userbonus" jdbcType="DOUBLE" />
    <result column="totalsalary" property="totalsalary" jdbcType="DOUBLE" />
    <result column="month_salary" property="monthSalary" jdbcType="DOUBLE" />
    <result column="socialDecase" property="socialdecase" jdbcType="DOUBLE" />
    <result column="tax" property="tax" jdbcType="DOUBLE" />
    <result column="realsalary" property="realsalary" jdbcType="DOUBLE" />
    <result column="month_bonus" property="monthBonus" jdbcType="DOUBLE" />
    <result column="month_bonus_tax" property="monthBonusTax" jdbcType="DOUBLE" />
    <result column="month_bonus_real" property="monthBonusReal" jdbcType="DOUBLE" />
    <result column="pre_bonus_store" property="preBonusStore" jdbcType="DOUBLE" />
    <result column="over_bonus_store" property="overBonusStore" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sid, salarydate, salaryid, name, department, contract_type, ordinary_address, branch_company, 
    userid, whether_bt_allowance, base_salary, yinda_identify, datetype, effectiveAttendance, 
    realityattendance, attendancesalary, leavetype, leavesalary, workovertime, worksalary, 
    subtotal, evection, allowance, heating_allowance, trafficsalary, timesalary, timebaseAdd, 
    task, tasksalary, taskbaseAdd, userbonus, totalsalary, month_salary, socialDecase, 
    tax, realsalary, month_bonus, month_bonus_tax, month_bonus_real, pre_bonus_store, 
    over_bonus_store
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.model.YoUserinfosalaryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yo_userinfosalary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from yo_userinfosalary
    where sid = #{sid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from yo_userinfosalary
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.YoUserinfosalary" >
    insert into yo_userinfosalary (sid, salarydate, salaryid, 
      name, department, contract_type, 
      ordinary_address, branch_company, userid, 
      whether_bt_allowance, base_salary, yinda_identify, 
      datetype, effectiveAttendance, realityattendance, 
      attendancesalary, leavetype, leavesalary, 
      workovertime, worksalary, subtotal, 
      evection, allowance, heating_allowance, 
      trafficsalary, timesalary, timebaseAdd, 
      task, tasksalary, taskbaseAdd, 
      userbonus, totalsalary, month_salary, 
      socialDecase, tax, realsalary, 
      month_bonus, month_bonus_tax, month_bonus_real, 
      pre_bonus_store, over_bonus_store)
    values (#{sid,jdbcType=INTEGER}, #{salarydate,jdbcType=VARCHAR}, #{salaryid,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{contractType,jdbcType=VARCHAR}, 
      #{ordinaryAddress,jdbcType=VARCHAR}, #{branchCompany,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, 
      #{whetherBtAllowance,jdbcType=VARCHAR}, #{baseSalary,jdbcType=DOUBLE}, #{yindaIdentify,jdbcType=VARCHAR}, 
      #{datetype,jdbcType=VARCHAR}, #{effectiveattendance,jdbcType=VARCHAR}, #{realityattendance,jdbcType=VARCHAR}, 
      #{attendancesalary,jdbcType=DOUBLE}, #{leavetype,jdbcType=VARCHAR}, #{leavesalary,jdbcType=DOUBLE}, 
      #{workovertime,jdbcType=VARCHAR}, #{worksalary,jdbcType=DOUBLE}, #{subtotal,jdbcType=DOUBLE}, 
      #{evection,jdbcType=VARCHAR}, #{allowance,jdbcType=DOUBLE}, #{heatingAllowance,jdbcType=DOUBLE}, 
      #{trafficsalary,jdbcType=DOUBLE}, #{timesalary,jdbcType=DOUBLE}, #{timebaseadd,jdbcType=DOUBLE}, 
      #{task,jdbcType=VARCHAR}, #{tasksalary,jdbcType=DOUBLE}, #{taskbaseadd,jdbcType=DOUBLE}, 
      #{userbonus,jdbcType=DOUBLE}, #{totalsalary,jdbcType=DOUBLE}, #{monthSalary,jdbcType=DOUBLE}, 
      #{socialdecase,jdbcType=DOUBLE}, #{tax,jdbcType=DOUBLE}, #{realsalary,jdbcType=DOUBLE}, 
      #{monthBonus,jdbcType=DOUBLE}, #{monthBonusTax,jdbcType=DOUBLE}, #{monthBonusReal,jdbcType=DOUBLE}, 
      #{preBonusStore,jdbcType=DOUBLE}, #{overBonusStore,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.model.YoUserinfosalary" >
    insert into yo_userinfosalary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        sid,
      </if>
      <if test="salarydate != null" >
        salarydate,
      </if>
      <if test="salaryid != null" >
        salaryid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="contractType != null" >
        contract_type,
      </if>
      <if test="ordinaryAddress != null" >
        ordinary_address,
      </if>
      <if test="branchCompany != null" >
        branch_company,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="whetherBtAllowance != null" >
        whether_bt_allowance,
      </if>
      <if test="baseSalary != null" >
        base_salary,
      </if>
      <if test="yindaIdentify != null" >
        yinda_identify,
      </if>
      <if test="datetype != null" >
        datetype,
      </if>
      <if test="effectiveattendance != null" >
        effectiveAttendance,
      </if>
      <if test="realityattendance != null" >
        realityattendance,
      </if>
      <if test="attendancesalary != null" >
        attendancesalary,
      </if>
      <if test="leavetype != null" >
        leavetype,
      </if>
      <if test="leavesalary != null" >
        leavesalary,
      </if>
      <if test="workovertime != null" >
        workovertime,
      </if>
      <if test="worksalary != null" >
        worksalary,
      </if>
      <if test="subtotal != null" >
        subtotal,
      </if>
      <if test="evection != null" >
        evection,
      </if>
      <if test="allowance != null" >
        allowance,
      </if>
      <if test="heatingAllowance != null" >
        heating_allowance,
      </if>
      <if test="trafficsalary != null" >
        trafficsalary,
      </if>
      <if test="timesalary != null" >
        timesalary,
      </if>
      <if test="timebaseadd != null" >
        timebaseAdd,
      </if>
      <if test="task != null" >
        task,
      </if>
      <if test="tasksalary != null" >
        tasksalary,
      </if>
      <if test="taskbaseadd != null" >
        taskbaseAdd,
      </if>
      <if test="userbonus != null" >
        userbonus,
      </if>
      <if test="totalsalary != null" >
        totalsalary,
      </if>
      <if test="monthSalary != null" >
        month_salary,
      </if>
      <if test="socialdecase != null" >
        socialDecase,
      </if>
      <if test="tax != null" >
        tax,
      </if>
      <if test="realsalary != null" >
        realsalary,
      </if>
      <if test="monthBonus != null" >
        month_bonus,
      </if>
      <if test="monthBonusTax != null" >
        month_bonus_tax,
      </if>
      <if test="monthBonusReal != null" >
        month_bonus_real,
      </if>
      <if test="preBonusStore != null" >
        pre_bonus_store,
      </if>
      <if test="overBonusStore != null" >
        over_bonus_store,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="salarydate != null" >
        #{salarydate,jdbcType=VARCHAR},
      </if>
      <if test="salaryid != null" >
        #{salaryid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null" >
        #{contractType,jdbcType=VARCHAR},
      </if>
      <if test="ordinaryAddress != null" >
        #{ordinaryAddress,jdbcType=VARCHAR},
      </if>
      <if test="branchCompany != null" >
        #{branchCompany,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="whetherBtAllowance != null" >
        #{whetherBtAllowance,jdbcType=VARCHAR},
      </if>
      <if test="baseSalary != null" >
        #{baseSalary,jdbcType=DOUBLE},
      </if>
      <if test="yindaIdentify != null" >
        #{yindaIdentify,jdbcType=VARCHAR},
      </if>
      <if test="datetype != null" >
        #{datetype,jdbcType=VARCHAR},
      </if>
      <if test="effectiveattendance != null" >
        #{effectiveattendance,jdbcType=VARCHAR},
      </if>
      <if test="realityattendance != null" >
        #{realityattendance,jdbcType=VARCHAR},
      </if>
      <if test="attendancesalary != null" >
        #{attendancesalary,jdbcType=DOUBLE},
      </if>
      <if test="leavetype != null" >
        #{leavetype,jdbcType=VARCHAR},
      </if>
      <if test="leavesalary != null" >
        #{leavesalary,jdbcType=DOUBLE},
      </if>
      <if test="workovertime != null" >
        #{workovertime,jdbcType=VARCHAR},
      </if>
      <if test="worksalary != null" >
        #{worksalary,jdbcType=DOUBLE},
      </if>
      <if test="subtotal != null" >
        #{subtotal,jdbcType=DOUBLE},
      </if>
      <if test="evection != null" >
        #{evection,jdbcType=VARCHAR},
      </if>
      <if test="allowance != null" >
        #{allowance,jdbcType=DOUBLE},
      </if>
      <if test="heatingAllowance != null" >
        #{heatingAllowance,jdbcType=DOUBLE},
      </if>
      <if test="trafficsalary != null" >
        #{trafficsalary,jdbcType=DOUBLE},
      </if>
      <if test="timesalary != null" >
        #{timesalary,jdbcType=DOUBLE},
      </if>
      <if test="timebaseadd != null" >
        #{timebaseadd,jdbcType=DOUBLE},
      </if>
      <if test="task != null" >
        #{task,jdbcType=VARCHAR},
      </if>
      <if test="tasksalary != null" >
        #{tasksalary,jdbcType=DOUBLE},
      </if>
      <if test="taskbaseadd != null" >
        #{taskbaseadd,jdbcType=DOUBLE},
      </if>
      <if test="userbonus != null" >
        #{userbonus,jdbcType=DOUBLE},
      </if>
      <if test="totalsalary != null" >
        #{totalsalary,jdbcType=DOUBLE},
      </if>
      <if test="monthSalary != null" >
        #{monthSalary,jdbcType=DOUBLE},
      </if>
      <if test="socialdecase != null" >
        #{socialdecase,jdbcType=DOUBLE},
      </if>
      <if test="tax != null" >
        #{tax,jdbcType=DOUBLE},
      </if>
      <if test="realsalary != null" >
        #{realsalary,jdbcType=DOUBLE},
      </if>
      <if test="monthBonus != null" >
        #{monthBonus,jdbcType=DOUBLE},
      </if>
      <if test="monthBonusTax != null" >
        #{monthBonusTax,jdbcType=DOUBLE},
      </if>
      <if test="monthBonusReal != null" >
        #{monthBonusReal,jdbcType=DOUBLE},
      </if>
      <if test="preBonusStore != null" >
        #{preBonusStore,jdbcType=DOUBLE},
      </if>
      <if test="overBonusStore != null" >
        #{overBonusStore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.YoUserinfosalary" >
    update yo_userinfosalary
    <set >
      <if test="salarydate != null" >
        salarydate = #{salarydate,jdbcType=VARCHAR},
      </if>
      <if test="salaryid != null" >
        salaryid = #{salaryid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null" >
        contract_type = #{contractType,jdbcType=VARCHAR},
      </if>
      <if test="ordinaryAddress != null" >
        ordinary_address = #{ordinaryAddress,jdbcType=VARCHAR},
      </if>
      <if test="branchCompany != null" >
        branch_company = #{branchCompany,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="whetherBtAllowance != null" >
        whether_bt_allowance = #{whetherBtAllowance,jdbcType=VARCHAR},
      </if>
      <if test="baseSalary != null" >
        base_salary = #{baseSalary,jdbcType=DOUBLE},
      </if>
      <if test="yindaIdentify != null" >
        yinda_identify = #{yindaIdentify,jdbcType=VARCHAR},
      </if>
      <if test="datetype != null" >
        datetype = #{datetype,jdbcType=VARCHAR},
      </if>
      <if test="effectiveattendance != null" >
        effectiveAttendance = #{effectiveattendance,jdbcType=VARCHAR},
      </if>
      <if test="realityattendance != null" >
        realityattendance = #{realityattendance,jdbcType=VARCHAR},
      </if>
      <if test="attendancesalary != null" >
        attendancesalary = #{attendancesalary,jdbcType=DOUBLE},
      </if>
      <if test="leavetype != null" >
        leavetype = #{leavetype,jdbcType=VARCHAR},
      </if>
      <if test="leavesalary != null" >
        leavesalary = #{leavesalary,jdbcType=DOUBLE},
      </if>
      <if test="workovertime != null" >
        workovertime = #{workovertime,jdbcType=VARCHAR},
      </if>
      <if test="worksalary != null" >
        worksalary = #{worksalary,jdbcType=DOUBLE},
      </if>
      <if test="subtotal != null" >
        subtotal = #{subtotal,jdbcType=DOUBLE},
      </if>
      <if test="evection != null" >
        evection = #{evection,jdbcType=VARCHAR},
      </if>
      <if test="allowance != null" >
        allowance = #{allowance,jdbcType=DOUBLE},
      </if>
      <if test="heatingAllowance != null" >
        heating_allowance = #{heatingAllowance,jdbcType=DOUBLE},
      </if>
      <if test="trafficsalary != null" >
        trafficsalary = #{trafficsalary,jdbcType=DOUBLE},
      </if>
      <if test="timesalary != null" >
        timesalary = #{timesalary,jdbcType=DOUBLE},
      </if>
      <if test="timebaseadd != null" >
        timebaseAdd = #{timebaseadd,jdbcType=DOUBLE},
      </if>
      <if test="task != null" >
        task = #{task,jdbcType=VARCHAR},
      </if>
      <if test="tasksalary != null" >
        tasksalary = #{tasksalary,jdbcType=DOUBLE},
      </if>
      <if test="taskbaseadd != null" >
        taskbaseAdd = #{taskbaseadd,jdbcType=DOUBLE},
      </if>
      <if test="userbonus != null" >
        userbonus = #{userbonus,jdbcType=DOUBLE},
      </if>
      <if test="totalsalary != null" >
        totalsalary = #{totalsalary,jdbcType=DOUBLE},
      </if>
      <if test="monthSalary != null" >
        month_salary = #{monthSalary,jdbcType=DOUBLE},
      </if>
      <if test="socialdecase != null" >
        socialDecase = #{socialdecase,jdbcType=DOUBLE},
      </if>
      <if test="tax != null" >
        tax = #{tax,jdbcType=DOUBLE},
      </if>
      <if test="realsalary != null" >
        realsalary = #{realsalary,jdbcType=DOUBLE},
      </if>
      <if test="monthBonus != null" >
        month_bonus = #{monthBonus,jdbcType=DOUBLE},
      </if>
      <if test="monthBonusTax != null" >
        month_bonus_tax = #{monthBonusTax,jdbcType=DOUBLE},
      </if>
      <if test="monthBonusReal != null" >
        month_bonus_real = #{monthBonusReal,jdbcType=DOUBLE},
      </if>
      <if test="preBonusStore != null" >
        pre_bonus_store = #{preBonusStore,jdbcType=DOUBLE},
      </if>
      <if test="overBonusStore != null" >
        over_bonus_store = #{overBonusStore,jdbcType=DOUBLE},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.YoUserinfosalary" >
    update yo_userinfosalary
    set salarydate = #{salarydate,jdbcType=VARCHAR},
      salaryid = #{salaryid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      contract_type = #{contractType,jdbcType=VARCHAR},
      ordinary_address = #{ordinaryAddress,jdbcType=VARCHAR},
      branch_company = #{branchCompany,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR},
      whether_bt_allowance = #{whetherBtAllowance,jdbcType=VARCHAR},
      base_salary = #{baseSalary,jdbcType=DOUBLE},
      yinda_identify = #{yindaIdentify,jdbcType=VARCHAR},
      datetype = #{datetype,jdbcType=VARCHAR},
      effectiveAttendance = #{effectiveattendance,jdbcType=VARCHAR},
      realityattendance = #{realityattendance,jdbcType=VARCHAR},
      attendancesalary = #{attendancesalary,jdbcType=DOUBLE},
      leavetype = #{leavetype,jdbcType=VARCHAR},
      leavesalary = #{leavesalary,jdbcType=DOUBLE},
      workovertime = #{workovertime,jdbcType=VARCHAR},
      worksalary = #{worksalary,jdbcType=DOUBLE},
      subtotal = #{subtotal,jdbcType=DOUBLE},
      evection = #{evection,jdbcType=VARCHAR},
      allowance = #{allowance,jdbcType=DOUBLE},
      heating_allowance = #{heatingAllowance,jdbcType=DOUBLE},
      trafficsalary = #{trafficsalary,jdbcType=DOUBLE},
      timesalary = #{timesalary,jdbcType=DOUBLE},
      timebaseAdd = #{timebaseadd,jdbcType=DOUBLE},
      task = #{task,jdbcType=VARCHAR},
      tasksalary = #{tasksalary,jdbcType=DOUBLE},
      taskbaseAdd = #{taskbaseadd,jdbcType=DOUBLE},
      userbonus = #{userbonus,jdbcType=DOUBLE},
      totalsalary = #{totalsalary,jdbcType=DOUBLE},
      month_salary = #{monthSalary,jdbcType=DOUBLE},
      socialDecase = #{socialdecase,jdbcType=DOUBLE},
      tax = #{tax,jdbcType=DOUBLE},
      realsalary = #{realsalary,jdbcType=DOUBLE},
      month_bonus = #{monthBonus,jdbcType=DOUBLE},
      month_bonus_tax = #{monthBonusTax,jdbcType=DOUBLE},
      month_bonus_real = #{monthBonusReal,jdbcType=DOUBLE},
      pre_bonus_store = #{preBonusStore,jdbcType=DOUBLE},
      over_bonus_store = #{overBonusStore,jdbcType=DOUBLE}
    where sid = #{sid,jdbcType=INTEGER}
  </update>

  <select id="search_salary" parameterType="java.lang.String" resultType="com.model.YoUserinfosalary">
    select  yo_userinfosalary.* from
    (SELECT staff_info.staff_id  as staff_id from staff_info WHERE staff_info.branch_company=#{0}) a,
    yo_userinfosalary WHERE yo_userinfosalary.salaryid =a.staff_id and yo_userinfosalary.salarydate = #{1}  ;
  </select>
  <select id="search_Jan_salary" parameterType="java.lang.String" resultType="com.model.YoUserinfosalary">
    select  sid, salarydate, salaryid, name, department, contract_type, ordinary_address, branch_company,
    userid, whether_bt_allowance, base_salary, datetype, attendance, effectiveAttendance,
    realityattendance, attendancesalary, leavetype, leavesalary, workovertime, worksalary,
    subtotal, bt_eff_days, evection, allowance, heating_allowance, trafficsalary, timesalary,
    timebaseAdd, task, tasksalary, taskbaseAdd, userbonus, socialDecase, totalsalary,
    month_salary as monthSalary, tax, realsalary, month_bonus as monthBonus, month_bonus_tax as monthBonusTax, month_bonus_real as monthBonusReal from
    yo_userinfosalary_copy WHERE yo_userinfosalary_copy.userid =#{0} and yo_userinfosalary_copy.salarydate = #{1}  ;
  </select>
</mapper>