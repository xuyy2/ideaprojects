<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.YoSalaryMapper">
  <resultMap id="BaseResultMap" type="com.model.YoSalary">
    <id column="sid" jdbcType="INTEGER" property="sid" />
    <result column="salarydate" jdbcType="VARCHAR" property="salarydate" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="staffid" jdbcType="VARCHAR" property="staffid" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="datetype" jdbcType="VARCHAR" property="datetype" />
    <result column="attendance" jdbcType="VARCHAR" property="attendance" />
    <result column="attendance_salary" jdbcType="DOUBLE" property="attendanceSalary" />
    <result column="leavetype" jdbcType="VARCHAR" property="leavetype" />
    <result column="leavesalary" jdbcType="DOUBLE" property="leavesalary" />
    <result column="workovertime" jdbcType="VARCHAR" property="workovertime" />
    <result column="worksalary" jdbcType="DOUBLE" property="worksalary" />
    <result column="evection" jdbcType="VARCHAR" property="evection" />
    <result column="allowance" jdbcType="DOUBLE" property="allowance" />
    <result column="timesalary" jdbcType="DOUBLE" property="timesalary" />
    <result column="task" jdbcType="VARCHAR" property="task" />
    <result column="tasksalary" jdbcType="DOUBLE" property="tasksalary" />
    <result column="trafficsalary" jdbcType="DOUBLE" property="trafficsalary" />
    <result column="realityattendance" jdbcType="VARCHAR" property="realityattendance" />
    <result column="effective_attendance" jdbcType="VARCHAR" property="effectiveAttendance" />
    <result column="work_address" jdbcType="VARCHAR" property="workAddress" />
    <result column="bonus_salary" jdbcType="DOUBLE" property="bonusSalary" />
    <result column="day_salary" jdbcType="DOUBLE" property="daySalary" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sid, salarydate, userid, staffid, date, datetype, attendance, attendance_salary, 
    leavetype, leavesalary, workovertime, worksalary, evection, allowance, timesalary, 
    task, tasksalary, trafficsalary, realityattendance, effective_attendance, work_address, 
    bonus_salary, day_salary
  </sql>
  <select id="selectByExample" parameterType="com.model.YoSalaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yo_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yo_salary
    where sid = #{sid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yo_salary
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.YoSalary">
    insert into yo_salary (sid, salarydate, userid, 
      staffid, date, datetype, 
      attendance, attendance_salary, leavetype, 
      leavesalary, workovertime, worksalary, 
      evection, allowance, timesalary, 
      task, tasksalary, trafficsalary, 
      realityattendance, effective_attendance, 
      work_address, bonus_salary, day_salary
      )
    values (#{sid,jdbcType=INTEGER}, #{salarydate,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, 
      #{staffid,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, #{datetype,jdbcType=VARCHAR}, 
      #{attendance,jdbcType=VARCHAR}, #{attendanceSalary,jdbcType=DOUBLE}, #{leavetype,jdbcType=VARCHAR}, 
      #{leavesalary,jdbcType=DOUBLE}, #{workovertime,jdbcType=VARCHAR}, #{worksalary,jdbcType=DOUBLE}, 
      #{evection,jdbcType=VARCHAR}, #{allowance,jdbcType=DOUBLE}, #{timesalary,jdbcType=DOUBLE}, 
      #{task,jdbcType=VARCHAR}, #{tasksalary,jdbcType=DOUBLE}, #{trafficsalary,jdbcType=DOUBLE}, 
      #{realityattendance,jdbcType=VARCHAR}, #{effectiveAttendance,jdbcType=VARCHAR}, 
      #{workAddress,jdbcType=VARCHAR}, #{bonusSalary,jdbcType=DOUBLE}, #{daySalary,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.YoSalary">
    insert into yo_salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        sid,
      </if>
      <if test="salarydate != null">
        salarydate,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="staffid != null">
        staffid,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="datetype != null">
        datetype,
      </if>
      <if test="attendance != null">
        attendance,
      </if>
      <if test="attendanceSalary != null">
        attendance_salary,
      </if>
      <if test="leavetype != null">
        leavetype,
      </if>
      <if test="leavesalary != null">
        leavesalary,
      </if>
      <if test="workovertime != null">
        workovertime,
      </if>
      <if test="worksalary != null">
        worksalary,
      </if>
      <if test="evection != null">
        evection,
      </if>
      <if test="allowance != null">
        allowance,
      </if>
      <if test="timesalary != null">
        timesalary,
      </if>
      <if test="task != null">
        task,
      </if>
      <if test="tasksalary != null">
        tasksalary,
      </if>
      <if test="trafficsalary != null">
        trafficsalary,
      </if>
      <if test="realityattendance != null">
        realityattendance,
      </if>
      <if test="effectiveAttendance != null">
        effective_attendance,
      </if>
      <if test="workAddress != null">
        work_address,
      </if>
      <if test="bonusSalary != null">
        bonus_salary,
      </if>
      <if test="daySalary != null">
        day_salary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="salarydate != null">
        #{salarydate,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="staffid != null">
        #{staffid,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="datetype != null">
        #{datetype,jdbcType=VARCHAR},
      </if>
      <if test="attendance != null">
        #{attendance,jdbcType=VARCHAR},
      </if>
      <if test="attendanceSalary != null">
        #{attendanceSalary,jdbcType=DOUBLE},
      </if>
      <if test="leavetype != null">
        #{leavetype,jdbcType=VARCHAR},
      </if>
      <if test="leavesalary != null">
        #{leavesalary,jdbcType=DOUBLE},
      </if>
      <if test="workovertime != null">
        #{workovertime,jdbcType=VARCHAR},
      </if>
      <if test="worksalary != null">
        #{worksalary,jdbcType=DOUBLE},
      </if>
      <if test="evection != null">
        #{evection,jdbcType=VARCHAR},
      </if>
      <if test="allowance != null">
        #{allowance,jdbcType=DOUBLE},
      </if>
      <if test="timesalary != null">
        #{timesalary,jdbcType=DOUBLE},
      </if>
      <if test="task != null">
        #{task,jdbcType=VARCHAR},
      </if>
      <if test="tasksalary != null">
        #{tasksalary,jdbcType=DOUBLE},
      </if>
      <if test="trafficsalary != null">
        #{trafficsalary,jdbcType=DOUBLE},
      </if>
      <if test="realityattendance != null">
        #{realityattendance,jdbcType=VARCHAR},
      </if>
      <if test="effectiveAttendance != null">
        #{effectiveAttendance,jdbcType=VARCHAR},
      </if>
      <if test="workAddress != null">
        #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="bonusSalary != null">
        #{bonusSalary,jdbcType=DOUBLE},
      </if>
      <if test="daySalary != null">
        #{daySalary,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.YoSalary">
    update yo_salary
    <set>
      <if test="salarydate != null">
        salarydate = #{salarydate,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="staffid != null">
        staffid = #{staffid,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="datetype != null">
        datetype = #{datetype,jdbcType=VARCHAR},
      </if>
      <if test="attendance != null">
        attendance = #{attendance,jdbcType=VARCHAR},
      </if>
      <if test="attendanceSalary != null">
        attendance_salary = #{attendanceSalary,jdbcType=DOUBLE},
      </if>
      <if test="leavetype != null">
        leavetype = #{leavetype,jdbcType=VARCHAR},
      </if>
      <if test="leavesalary != null">
        leavesalary = #{leavesalary,jdbcType=DOUBLE},
      </if>
      <if test="workovertime != null">
        workovertime = #{workovertime,jdbcType=VARCHAR},
      </if>
      <if test="worksalary != null">
        worksalary = #{worksalary,jdbcType=DOUBLE},
      </if>
      <if test="evection != null">
        evection = #{evection,jdbcType=VARCHAR},
      </if>
      <if test="allowance != null">
        allowance = #{allowance,jdbcType=DOUBLE},
      </if>
      <if test="timesalary != null">
        timesalary = #{timesalary,jdbcType=DOUBLE},
      </if>
      <if test="task != null">
        task = #{task,jdbcType=VARCHAR},
      </if>
      <if test="tasksalary != null">
        tasksalary = #{tasksalary,jdbcType=DOUBLE},
      </if>
      <if test="trafficsalary != null">
        trafficsalary = #{trafficsalary,jdbcType=DOUBLE},
      </if>
      <if test="realityattendance != null">
        realityattendance = #{realityattendance,jdbcType=VARCHAR},
      </if>
      <if test="effectiveAttendance != null">
        effective_attendance = #{effectiveAttendance,jdbcType=VARCHAR},
      </if>
      <if test="workAddress != null">
        work_address = #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="bonusSalary != null">
        bonus_salary = #{bonusSalary,jdbcType=DOUBLE},
      </if>
      <if test="daySalary != null">
        day_salary = #{daySalary,jdbcType=DOUBLE},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.YoSalary">
    update yo_salary
    set salarydate = #{salarydate,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR},
      staffid = #{staffid,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      datetype = #{datetype,jdbcType=VARCHAR},
      attendance = #{attendance,jdbcType=VARCHAR},
      attendance_salary = #{attendanceSalary,jdbcType=DOUBLE},
      leavetype = #{leavetype,jdbcType=VARCHAR},
      leavesalary = #{leavesalary,jdbcType=DOUBLE},
      workovertime = #{workovertime,jdbcType=VARCHAR},
      worksalary = #{worksalary,jdbcType=DOUBLE},
      evection = #{evection,jdbcType=VARCHAR},
      allowance = #{allowance,jdbcType=DOUBLE},
      timesalary = #{timesalary,jdbcType=DOUBLE},
      task = #{task,jdbcType=VARCHAR},
      tasksalary = #{tasksalary,jdbcType=DOUBLE},
      trafficsalary = #{trafficsalary,jdbcType=DOUBLE},
      realityattendance = #{realityattendance,jdbcType=VARCHAR},
      effective_attendance = #{effectiveAttendance,jdbcType=VARCHAR},
      work_address = #{workAddress,jdbcType=VARCHAR},
      bonus_salary = #{bonusSalary,jdbcType=DOUBLE},
      day_salary = #{daySalary,jdbcType=DOUBLE}
    where sid = #{sid,jdbcType=INTEGER}
  </update>
  
<select id="select_BY_Anttendane" parameterType="com.model.YoSalary"  resultMap="BaseResultMap"> 
  select * from yo_salary  WHERE yo_salary.userid = #{userid}
  and  MONTH(date) = MONTH(#{date}) 
  and  attendance = 1
</select>


<select id="select_BY_Leavetype" parameterType="com.model.YoSalary"  resultMap="BaseResultMap"> 


  select * from yo_salary  WHERE yo_salary.userid = #{userid}
  and  MONTH(date) = MONTH(#{date})
  and  leavetype != 0

</select>

<select id="select_BY_WorkTime" parameterType="com.model.YoSalary"  resultMap="BaseResultMap"> 


  select * from yo_salary  WHERE yo_salary.userid = #{userid}
  and  MONTH(date) = MONTH(#{date})
  and  workovertime = 1
</select>


<select id="select_BY_Evenctime" parameterType="com.model.YoSalary"  resultMap="BaseResultMap"> 


  select * from yo_salary  WHERE yo_salary.userid = #{userid}
  and  MONTH(date) = MONTH(#{date}) 
  and  evection = 1
  
  
</select>

</mapper>